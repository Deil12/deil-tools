<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.deil</groupId>
    <artifactId>deil-tools</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <description>Deil工具集</description>

    <modules>
        <module>deil-common</module>
        <module>deil-healthcheck</module>
        <module>deil-gateway</module>
        <module>deil-quartz</module>
        <module>deil-window</module>
        <module>deil-demo</module>
        <module>deil-web</module>
        <module>deil-scheduler</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <project.build.sourceEncoding>${maven.compiler.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${maven.compiler.encoding}</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyy_MM_dd_HH_mm_ss</maven.build.timestamp.format>

        <project-jarPack>${user.dir}/pack</project-jarPack>
        <project-reportPack>${user.dir}/report</project-reportPack>
        <project-logPack>${user.dir}/logs</project-logPack>

        <skipJavadoc>true</skipJavadoc>
        <skipCheck>true</skipCheck>
        <skipCheckstyle>true</skipCheckstyle>
        <skipAntrun>false</skipAntrun>
        <skipDocker>true</skipDocker>
        <skipProguard>true</skipProguard>
        <proguard.version>7.1.1</proguard.version>

        <spring-boot.version>2.7.16</spring-boot.version>
        <spring.version>5.3.30</spring.version>
        <junit-vintage-engine.version>5.9.2</junit-vintage-engine.version>
        <lombok.version>1.18.28</lombok.version>
        <jasypt-spring-boot-starter.version>3.0.5</jasypt-spring-boot-starter.version>

        <!-- ######################################## deil-utils ######################################## -->
        <mybatis-spring-boot-starter.version>2.2.2</mybatis-spring-boot-starter.version>
        <tomcat-embed-core.version>9.0.80</tomcat-embed-core.version>
        <reactor-netty-http.version>1.0.35</reactor-netty-http.version>
        <httpclient.version>4.5.13</httpclient.version>
        <aspectjweaver.version>1.9.7</aspectjweaver.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
        <joda-time.version>2.10.13</joda-time.version>
        <dom4j.version>2.1.4</dom4j.version>
        <fastjson.version>2.0.38</fastjson.version>
        <jackson-databind.version>2.15.2</jackson-databind.version>
        <javase.version>3.5.1</javase.version>
        <minio.version>8.4.3</minio.version>
        <antisamy.version>1.7.3</antisamy.version>
        <batik-css.version>1.17</batik-css.version>
        <bcprov-jdk18on.version>1.76</bcprov-jdk18on.version>
        <mica-auto.version>2.3.0</mica-auto.version>
        <swagger.version>2.9.2</swagger.version>
        <knife4j.version>2.0.4</knife4j.version>
        <annotations.version>3.0.1</annotations.version>

<!--
        <mybatis-generator-maven-plugin.version>1.4.2</mybatis-generator-maven-plugin.version>
        <druid-spring-boot-starter.version>1.2.13-SNSAPSHOT</druid-spring-boot-starter.version>
        <javax.persistence-api.version>2.2</javax.persistence-api.version>
        <nacos.version>2.2.4</nacos.version>
        <grpc.version>1.57.2</grpc.version>
        <guava.version>32.1.2-jre</guava.version>
        <hutool.version>5.8.21</hutool.version>
        <log4j-api.version>2.20.0</log4j-api.version>
-->

        <!-- ######################################## deil-gateway ######################################## -->
        <spring-cloud-starter-gateway.version>3.1.1</spring-cloud-starter-gateway.version>
        <spring-cloud-alibaba.version><!--2021.0.4.0-->2021.0.5.0</spring-cloud-alibaba.version>
        <nacos-client.version>2.2.4</nacos-client.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <spring-cloud-starter.version>3.1.5</spring-cloud-starter.version>
        <bcprov-jdk18.verison>1.76</bcprov-jdk18.verison>
        <fastjson.version>2.0.38</fastjson.version>

        <!-- ######################################## deil-quartz ######################################## -->
        <pagehelper-spring-boot-starter.artifactId>1.4.1</pagehelper-spring-boot-starter.artifactId>

        <!-- ######################################## deil-healthcheck ######################################## -->
        <logback-classic.version>1.2.12</logback-classic.version>
        <jasypt.version>1.9.3</jasypt.version>
        <commons-codec.version>1.15</commons-codec.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <!--<exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                    </exclusion>
                </exclusions>-->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--<repositories>
        <repository>
            <id>rdc-releases</id>
            <url>https://packages.aliyun.com/maven/repository/2412667-release-qjQwgr/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>rdc-snapshots</id>
            <url>https://packages.aliyun.com/maven/repository/2412667-snapshot-SlZE45/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>-->
    <!--<distributionManagement>
        <repository>
            <id>rdc-releases</id>
            <url>https://packages.aliyun.com/maven/repository/2412667-release-qjQwgr/</url>
        </repository>
        <snapshotRepository>
            <id>rdc-snapshots</id>
            <url>https://packages.aliyun.com/maven/repository/2412667-snapshot-SlZE45/</url>
        </snapshotRepository>
    </distributionManagement>-->

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-OS>${os.name}</Build-OS>
                            <Built-By>Deil</Built-By>
                            <Build-Jdk>${java.version}</Build-Jdk>
                            <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
                            <Automatic-Module-Name>${project.groupId}</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <!-- 配置单测失败几次后停止执行 -->
                    <skipAfterFailureCount>0</skipAfterFailureCount>
                    <!-- 不允许跳过单测 -->
                    <skipTests>false</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-maven-plugin</artifactId>
                <version>${jasypt-spring-boot-starter.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <skipSource>${skipJavadoc}</skipSource>
                </configuration>
                <executions>
                    <execution>
                        <id>DEIL-SOURCE</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin><!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/test-javadocs.html -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <skip>${skipJavadoc}</skip>
                    <outputDirectory>${project-reportPack}/javadocs/javadocs-report[${project.artifactId}]</outputDirectory>
                    <!--<destDir>javadocs_${maven.build.timestamp}</destDir>-->
                    <!--<aggregate>true</aggregate>
                    <additionalparam>-Xdoclint:none</additionalparam>-->
                    <doclint>none</doclint>
                    <tags>
                        <tag>
                            <name>PURPOSE</name>
                            <placement>a</placement>
                            <head>描述</head>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <execution>
                        <id>DEIL-JAVADOC</id>
                        <phase>install</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                            <!--<additionalparam>-Xdoclint:none</additionalparam>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin><!-- 测试覆盖度 https://www.mojohaus.org/cobertura-maven-plugin -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>HTML</formats>
                    <outputDirectory>${project-reportPack}/cobertura/cobertura-report[${project.artifactId}]</outputDirectory>
                    <!--<aggregate>true</aggregate>
                    <check/>-->
                    <check>
                        <!--每个类的分支覆盖率-->
                        <branchRate>85</branchRate>
                        <!--每个类的代码行覆盖率-->
                        <lineRate>85</lineRate>
                        <!--校验失败则中止.即为true时如果校验失败则打包执行失败,反之则只是打出告警日志-->
                        <haltOnFailure>true</haltOnFailure>
                        <!--整体的分支覆盖率-->
                        <totalBranchRate>85</totalBranchRate>
                        <!--整体的代码行覆盖率-->
                        <totalLineRate>85</totalLineRate>
                        <!--每个包的分支行覆盖率-->
                        <packageBranchRate>85</packageBranchRate>
                        <!--每个包的代码行覆盖率-->
                        <packageLineRate>85</packageLineRate>
                        <regexes>
                            <!--通过表达式设定覆盖率阈值-->
                            <regex>
                                <pattern>org.deil.utils.*</pattern>
                                <branchRate>90</branchRate>
                                <lineRate>80</lineRate>
                            </regex>
                        </regexes>
                    </check>
                </configuration>
            </plugin>
            <plugin><!-- https://jeremylong.github.io/DependencyCheck/dependency-check-maven/index.html -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>8.4.3</version>
                <configuration>
                    <skip>${skipCheck}</skip>
                    <autoUpdate>true</autoUpdate>
                    <outputDirectory>${project-reportPack}/dependency-check/dependency-check-report[${project.artifactId}]_${maven.build.timestamp}.html</outputDirectory>
                    <formats>HTML</formats>
                    <centralAnalyzerEnabled>false</centralAnalyzerEnabled>
                    <versionCheckEnabled>true</versionCheckEnabled>
                    <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <hostedSuppressionsForceUpdate>true</hostedSuppressionsForceUpdate>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin><!-- https://spotbugs.readthedocs.io/en/stable/maven.html -->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.1.3</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <spotbugsXmlOutputFilename>spotbugs-report[${project.artifactId}]_${maven.build.timestamp}.xml</spotbugsXmlOutputFilename>
                    <spotbugsXmlOutputDirectory>${project-reportPack}/spotbugs</spotbugsXmlOutputDirectory>
                    <!-- 设置分析工作的等级，可以为Min、Default和Max -->
                    <effort>Low</effort>
                    <!-- Low、Medium和High (Low最严格) High只扫描严重错误。建议用Medium-->
                    <threshold>Medium</threshold>
                    <failOnError>false</failOnError>
                    <includeTests>false</includeTests>
                    <skipEmptyReport>true</skipEmptyReport>
                    <!--<excludeFilterFile>${project-reportPack}/bugs-exclude-filter.xml</excludeFilterFile>-->
                </configuration>
            </plugin>
            <plugin><!-- https://maven.apache.org/plugins/maven-checkstyle-plugin/examples/custom-checker-config.html -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <skip>${skipCheckstyle}</skip>
                    <linkXRef>false</linkXRef>
                    <encoding>UTF-8</encoding>
                    <failOnViolation>false</failOnViolation>
                    <!--<failsOnError>false</failsOnError>-->
                    <outputFile>${project-reportPack}/checkstyle/checkstyle-report[${project.artifactId}]_${maven.build.timestamp}.xml</outputFile>
                </configuration>
                <executions>
                    <execution>
                        <id>DEIL-CHECKSTYLE</id>
                        <phase>none</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <configLocation>${project-reportPack}/checkstyle-alibaba.xml</configLocation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <configuration>
                        <skip>${skipAntrun}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>DEIL-CLEAN</id>
                            <phase>clean</phase>
                            <configuration>
                                <target>
                                    <mkdir dir="${project-jarPack}"/>
                                    <delete>
                                        <fileset dir="${project-jarPack}" includes="**/${project.build.finalName}**.*ar"></fileset>
                                        <fileset dir="${project-jarPack}" includes="**/cobertura/**"></fileset>
                                    </delete>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>DEIL-COPY</id>
                            <phase>package</phase>
                            <configuration>
                                <target>
                                    <copy todir="${project-jarPack}">
                                        <fileset dir="${project.build.directory}" includes="${project.build.finalName}**.*ar"></fileset>
                                        <fileset dir="${project.build.directory}/classes" includes="application.yml"></fileset>
                                    </copy>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin><!-- https://github.com/spotify/docker-maven-plugin -->
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <skipDocker>${skipDocker}</skipDocker>
                        <!--<dockerHost>http://localhost:2375</dockerHost>-->
                        <forceTags>true</forceTags>
                        <maintainer>Deil</maintainer>
                        <baseImage>java</baseImage>
                        <imageName>deil/${project.artifactId}:${project.version}</imageName>
                        <imageTags>${project.version}</imageTags>
                        <workdir>/opt</workdir>
                        <volumes>
                            <volume>/opt/logs</volume>
                        </volumes>
                        <entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>
                        <resources>
                            <resource>
                                <targetPath>/opt</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                    <executions>
                        <execution>
                            <id>DEIL-DOCKERBUILD</id>
                            <phase>package</phase>
                            <goals>
                                <goal>removeImage</goal>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin><!-- https://www.guardsquare.com/proguard -->
                    <groupId>com.github.wvengen</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>2.6.0</version>
                    <configuration>
                        <!--<proguardVersion>${proguard.version}</proguardVersion>-->
                        <skip>${skipProguard}</skip>
                        <obfuscate>true</obfuscate>
                        <proguardInclude>${project.basedir}/src/main/test/proguard.cfg</proguardInclude>
                        <inLibsFilter>!META-INF/**,!META-INF/versions/9/**.class</inLibsFilter>
                        <injar>${project.build.finalName}.jar</injar>
                        <outjar>${project.build.finalName}-min.jar</outjar>
                        <!--<outputDirectory>${project-jarPack}</outputDirectory>-->
                        <libs>
                            <lib>${java.home}/lib/rt.jar</lib>
                            <lib>${java.home}/lib/jce.jar</lib>
                            <lib>${java.home}/lib/jsse.jar</lib>
                        </libs>
                        <options>
                            <!-- # 指定Java的版本 -->
                            <option>-target 1.8</option>
                            <!-- # 不删除没有使用的类/成员，proguard会对代码进行优化压缩，会删除从未使用的类或者类成员变量等 -->
                            <option>-dontshrink</option>
                            <!-- # 是否关闭字节码级别的优化 -->
                            <option>-dontoptimize</option>
                            <!-- # 混淆时不生成大小写混合的类名，默认是可以大小写混合 -->
                            <option>-dontusemixedcaseclassnames</option>
                            <!-- # 对于类成员的命名的混淆采取唯一策略 -->
                            <option>-useuniqueclassmembernames</option>
                            <!-- # 混淆时不生成大小写混合的类名，默认是可以大小写混合 -->
                            <option>-dontusemixedcaseclassnames</option>
                            <!-- # 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代 -->
                            <option>-adaptclassstrings</option>
                            <!-- # 忽略warn消息 -->
                            <option>-ignorewarnings</option>
                            <!-- # 忽略note消息 -->
                            <option>-dontnote</option>
                            <!-- # 打印配置信息 -->
                            <option>-printconfiguration</option>

                            <!-- # 对异常、注解信息予以保留 -->
                            <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
                            <!-- # 此选项将保存接口中的所有原始名称（不混淆） -->
                            <option>-keepnames interface ** { *; }</option>
                            <!-- # 保留参数名，因为控制器，或者Mybatis等接口的参数如果混淆会导致无法接受参数，xml文件找不到参数 -->
                            <option>-keepparameternames</option>
                            <!-- # 保留枚举成员及方法 -->
                            <option>-keepclassmembers enum * { *; }</option>
                            <!-- # 不混淆所有类,保存原始定义的注解 -->
                            <option>-keepclassmembers class * {
                                @org.springframework.context.annotation.Bean *;
                                @org.springframework.beans.factory.annotation.Autowired *;
                                @org.springframework.beans.factory.annotation.Value *;
                                @org.springframework.stereotype.Service *;
                                @org.springframework.stereotype.Component *;
                                }
                            </option>
                            <option>-keep public class com.itlab1024.proguard.SpringBootProguardApplication {
                                public static void main(java.lang.String[]);
                                }
                            </option>
                            <!-- # 此选项将保存所有软件包中的所有原始接口文件（不进行混淆）-->
                            <!--<option>-keep interface * extends * { *; }</option>-->
                            <!-- # 保持所有原始类文件(不混淆)，但混淆域包中的所有文件 -->
                            <!-- #<option>-keep class !com.slm.proguard.example.spring.boot.domain.** { *; }</option> -->
                            <!-- # 保持包中的所有原始类文件(不混淆) -->
                            <!-- #<option>-keep class com.slm.proguard.example.spring.boot.service { *; }</option> -->
                        </options>
                    </configuration>
                    <executions>
                        <execution>
                            <id>DEIL-PROGUARD</id>
                            <phase>package</phase>
                            <goals>
                                <goal>proguard</goal>
                            </goals>
                        </execution>
                    </executions>
                    <!--<dependencies>
                        <dependency>
                            <groupId>com.guardsquare</groupId>
                            <artifactId>proguard-base</artifactId>
                            <version>${proguard.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                        <dependency>
                            <groupId>com.guardsquare</groupId>
                            <artifactId>proguard-core</artifactId>
                            <version>${proguard.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>-->
                </plugin>
                <plugin><!-- https://gitee.com/roseboy/classfinal -->
                    <groupId>net.roseboy</groupId>
                    <artifactId>classfinal-maven-plugin</artifactId>
                    <version>1.2.1</version>
                    <configuration>
                        <!--
                            1. 无密码启动方式,java -javaagent:xxx-encrypted.jar -jar xxx-encrypted.jar
                            2. 有密码启动方式,java -javaagent:xxx-encrypted.jar='-pwd= 密码' -jar xxx-encrypted.jar
                        -->
                        <password>#</password><!-- #表示启动时不需要密码,仅是一个启动密码 -->
                        <excludes>org.spring</excludes>
                        <packages>${project.groupId}</packages><!-- 加密的包名,多个包用逗号分开 -->
                        <cfgfiles>*.yml,*.properties,logback*.xml</cfgfiles><!-- 加密的配置文件,多个包用逗号分开 -->
                        <!--<libjars>hutool-all.jar</libjars>--><!-- jar包lib下面要加密的jar依赖文件,多个包用逗号分开 -->
                        <!--<code>xxxx</code>--><!-- 指定机器启动,机器码 -->
                    </configuration>
                    <executions>
                        <execution>
                            <id>DEIL-CLASSFINAL</id>
                            <phase>package</phase>
                            <goals>
                                <goal>classFinal</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileActive>dev</profileActive>
                <securityEnable>false</securityEnable>
                <devToolEnable>true</devToolEnable>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <properties>
                <profileActive>test</profileActive>
                <securityEnable>true</securityEnable>
                <devToolEnable>false</devToolEnable>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
                <securityEnable>true</securityEnable>
                <devToolEnable>false</devToolEnable>
            </properties>
        </profile>
    </profiles>

</project>